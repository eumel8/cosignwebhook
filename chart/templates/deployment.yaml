apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cosignwebhook.fullname" . }}
  labels:
    {{- include "cosignwebhook.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cosignwebhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cosignwebhook.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cosignwebhook.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - args:
        - verify
        - --key
        - env://COSIGNPUBKEY
        - {{ .Values.cosign.image.repository }}:{{ .Values.cosign.image.tag }}
        command:
        - cosign
        env:
        - name: COSIGNPUBKEY
          value: {{- toYaml .Values.cosign.sccosign.key | indent 12 }}
        image: "{{ .Values.cosign.image.repository }}:{{ .Values.cosign.image.tag }}"
        imagePullPolicy: {{ .Values.cosign.image.pullPolicy }}
        name: sccosign
        resources:
          {{- toYaml .Values.initresources | nindent 10 }}
      - args:
        - verify
        - --insecure-ignore-tlog
        - --key
        - env://COSIGNPUBKEY
        - {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        command:
        - cosign
        env:
        - name: COSIGNPUBKEY
          value: {{- toYaml .Values.cosign.scwebhook.key | indent 12 }}
        image: "{{ .Values.cosign.image.repository }}:{{ .Values.cosign.image.tag }}"
        imagePullPolicy: {{ .Values.cosign.image.pullPolicy }}
        name: scwebhook
        resources:
          {{- toYaml .Values.initresources | nindent 10 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - -alsologtostderr
            - 2>&1
            # - --log_dir=/
            # - -v=10
          env:
          - name: COSIGNPUBKEY
            value: {{- toYaml .Values.cosign.key | indent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            - name: healthz
              containerPort: {{ .Values.service.metricPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.metricPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.metricPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/certs
              readOnly: true
            - name: logs
              mountPath: /tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ .Chart.Name }}
        - name: logs
          emptyDir: {}
