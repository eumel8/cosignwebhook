{{- $altNames := list ( printf "%s.%s" (include "cosignwebhook.fullname" .) .Release.Namespace ) ( printf "%s.%s.svc" (include "cosignwebhook.fullname" .) .Release.Namespace ) -}}
{{- $ca := genCA "cosign-webhook-ca" 3650 -}}
{{- $cert := genSignedCert ( include "cosignwebhook.fullname" . ) nil $altNames 3650 $ca -}}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ include "cosignwebhook.fullname" . }}
  labels:
    {{- include "cosignwebhook.labels" . | nindent 4 }}
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "cosignwebhook.fullname" . }}
webhooks:
  - admissionReviewVersions:
    - v1
    name: {{ .Values.admission.webhook.name }}
    matchPolicy: {{ .Values.admission.matchPolicy }}
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: [{{ .Release.Namespace | default "default" }}{{- if .Values.admission.exclude }},{{ .Values.admission.exclude }}{{- end }}]
    clientConfig:
      service:
        name: {{ include "cosignwebhook.fullname" . }}
        namespace: {{ .Release.Namespace | default "default" }}
        path: "/validate"
        port: 443
      caBundle: {{ $ca.Cert | b64enc }}
    rules:
      - operations: ["CREATE","UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
        scope: "*"
    failurePolicy: {{ .Values.admission.failurePolicy }}
    sideEffects: {{ .Values.admission.sideEffects }}
    timeoutSeconds: {{ .Values.admission.timeoutSeconds }}
