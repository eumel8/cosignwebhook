name: End2End Testing
on: [push]

jobs:
  end2end:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Install k3d
      run: |
        curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
        k3d version
    - name: Create Cluster & Registry
      run: |
          make e2e-cluster
    - name: Check Cluster Nodes
      run: |
        kubectl get nodes
    - name: Check Coredns Deployment
      run: |
        kubectl -n kube-system rollout status deployment/coredns --timeout=60s
        STATUS=$(kubectl -n kube-system get deployment coredns -o jsonpath={.status.readyReplicas})
        if [[ $STATUS  -ne  1 ]]
        then
          echo "Deployment coredns not ready"
          kubectl -n kube-system get events
          exit 1
        else
          echo "Deployment coredns OK"
        fi
    - name: Check Metricsserver Deployment
      run: |
        kubectl -n kube-system rollout status deployment/metrics-server --timeout=60s
        STATUS=$(kubectl -n kube-system get deployment metrics-server -o jsonpath={.status.readyReplicas})
        if [[ $STATUS  -ne  1 ]]
        then
          echo "Deployment metrics-server not ready"
          kubectl -n kube-system get events
          exit 1
        else
          echo "Deployment metrics-server OK"
        fi
    - name: Setup Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        helm version
    - name: Install Cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v2.2.0'
    - name: Create ephemeral keys
      run: |
        make e2e-keys
    - name: Build test image
      run: |
        make e2e-images
    - name: Install Cosignwebhook
      run: |
        make e2e-deploy
    - name: Run End2End Tests
      run: |
        go mod download
        make test-e2e
